/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.asta.isoObject;

public class RemoteControlManoeuvreMessageType {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RemoteControlManoeuvreMessageType(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RemoteControlManoeuvreMessageType obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        isoObject_wrapJNI.delete_RemoteControlManoeuvreMessageType(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setStatus(short value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_status_set(swigCPtr, this, value);
  }

  public short getStatus() {
    return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_status_get(swigCPtr, this);
  }

  static public class steeringMan {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected steeringMan(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(steeringMan obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          isoObject_wrapJNI.delete_RemoteControlManoeuvreMessageType_steeringMan(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setPct(double value) {
      isoObject_wrapJNI.RemoteControlManoeuvreMessageType_steeringMan_pct_set(swigCPtr, this, value);
    }
  
    public double getPct() {
      return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_steeringMan_pct_get(swigCPtr, this);
    }
  
    public void setRad(double value) {
      isoObject_wrapJNI.RemoteControlManoeuvreMessageType_steeringMan_rad_set(swigCPtr, this, value);
    }
  
    public double getRad() {
      return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_steeringMan_rad_get(swigCPtr, this);
    }
  
    public steeringMan() {
      this(isoObject_wrapJNI.new_RemoteControlManoeuvreMessageType_steeringMan(), true);
    }
  
  }

  public void setSteeringManoeuvre(steeringMan value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_steeringManoeuvre_set(swigCPtr, this, steeringMan.getCPtr(value), value);
  }

  public steeringMan getSteeringManoeuvre() {
    long cPtr = isoObject_wrapJNI.RemoteControlManoeuvreMessageType_steeringManoeuvre_get(swigCPtr, this);
    return (cPtr == 0) ? null : new steeringMan(cPtr, false);
  }

  static public class speedMan {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected speedMan(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(speedMan obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          isoObject_wrapJNI.delete_RemoteControlManoeuvreMessageType_speedMan(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setPct(double value) {
      isoObject_wrapJNI.RemoteControlManoeuvreMessageType_speedMan_pct_set(swigCPtr, this, value);
    }
  
    public double getPct() {
      return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_speedMan_pct_get(swigCPtr, this);
    }
  
    public void setM_s(double value) {
      isoObject_wrapJNI.RemoteControlManoeuvreMessageType_speedMan_m_s_set(swigCPtr, this, value);
    }
  
    public double getM_s() {
      return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_speedMan_m_s_get(swigCPtr, this);
    }
  
    public speedMan() {
      this(isoObject_wrapJNI.new_RemoteControlManoeuvreMessageType_speedMan(), true);
    }
  
  }

  public void setSpeedManoeuvre(speedMan value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_speedManoeuvre_set(swigCPtr, this, speedMan.getCPtr(value), value);
  }

  public speedMan getSpeedManoeuvre() {
    long cPtr = isoObject_wrapJNI.RemoteControlManoeuvreMessageType_speedManoeuvre_get(swigCPtr, this);
    return (cPtr == 0) ? null : new speedMan(cPtr, false);
  }

  static public class throttleMan {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected throttleMan(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(throttleMan obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          isoObject_wrapJNI.delete_RemoteControlManoeuvreMessageType_throttleMan(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setPct(double value) {
      isoObject_wrapJNI.RemoteControlManoeuvreMessageType_throttleMan_pct_set(swigCPtr, this, value);
    }
  
    public double getPct() {
      return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_throttleMan_pct_get(swigCPtr, this);
    }
  
    public throttleMan() {
      this(isoObject_wrapJNI.new_RemoteControlManoeuvreMessageType_throttleMan(), true);
    }
  
  }

  public void setThrottleManoeuvre(throttleMan value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_throttleManoeuvre_set(swigCPtr, this, throttleMan.getCPtr(value), value);
  }

  public throttleMan getThrottleManoeuvre() {
    long cPtr = isoObject_wrapJNI.RemoteControlManoeuvreMessageType_throttleManoeuvre_get(swigCPtr, this);
    return (cPtr == 0) ? null : new throttleMan(cPtr, false);
  }

  static public class brakeMan {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected brakeMan(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(brakeMan obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          isoObject_wrapJNI.delete_RemoteControlManoeuvreMessageType_brakeMan(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setPct(double value) {
      isoObject_wrapJNI.RemoteControlManoeuvreMessageType_brakeMan_pct_set(swigCPtr, this, value);
    }
  
    public double getPct() {
      return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_brakeMan_pct_get(swigCPtr, this);
    }
  
    public brakeMan() {
      this(isoObject_wrapJNI.new_RemoteControlManoeuvreMessageType_brakeMan(), true);
    }
  
  }

  public void setBrakeManoeuvre(brakeMan value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_brakeManoeuvre_set(swigCPtr, this, brakeMan.getCPtr(value), value);
  }

  public brakeMan getBrakeManoeuvre() {
    long cPtr = isoObject_wrapJNI.RemoteControlManoeuvreMessageType_brakeManoeuvre_get(swigCPtr, this);
    return (cPtr == 0) ? null : new brakeMan(cPtr, false);
  }

  public void setCommand(RemoteControlManoeuvreCommandType value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_command_set(swigCPtr, this, value.swigValue());
  }

  public RemoteControlManoeuvreCommandType getCommand() {
    return RemoteControlManoeuvreCommandType.swigToEnum(isoObject_wrapJNI.RemoteControlManoeuvreMessageType_command_get(swigCPtr, this));
  }

  public void setSteeringUnit(ISOUnitType value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_steeringUnit_set(swigCPtr, this, value.swigValue());
  }

  public ISOUnitType getSteeringUnit() {
    return ISOUnitType.swigToEnum(isoObject_wrapJNI.RemoteControlManoeuvreMessageType_steeringUnit_get(swigCPtr, this));
  }

  public void setSpeedUnit(ISOUnitType value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_speedUnit_set(swigCPtr, this, value.swigValue());
  }

  public ISOUnitType getSpeedUnit() {
    return ISOUnitType.swigToEnum(isoObject_wrapJNI.RemoteControlManoeuvreMessageType_speedUnit_get(swigCPtr, this));
  }

  public void setThrottleUnit(ISOUnitType value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_throttleUnit_set(swigCPtr, this, value.swigValue());
  }

  public ISOUnitType getThrottleUnit() {
    return ISOUnitType.swigToEnum(isoObject_wrapJNI.RemoteControlManoeuvreMessageType_throttleUnit_get(swigCPtr, this));
  }

  public void setBrakeUnit(ISOUnitType value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_brakeUnit_set(swigCPtr, this, value.swigValue());
  }

  public ISOUnitType getBrakeUnit() {
    return ISOUnitType.swigToEnum(isoObject_wrapJNI.RemoteControlManoeuvreMessageType_brakeUnit_get(swigCPtr, this));
  }

  public void setIsSteeringManoeuvreValid(boolean value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_isSteeringManoeuvreValid_set(swigCPtr, this, value);
  }

  public boolean getIsSteeringManoeuvreValid() {
    return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_isSteeringManoeuvreValid_get(swigCPtr, this);
  }

  public void setIsSpeedManoeuvreValid(boolean value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_isSpeedManoeuvreValid_set(swigCPtr, this, value);
  }

  public boolean getIsSpeedManoeuvreValid() {
    return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_isSpeedManoeuvreValid_get(swigCPtr, this);
  }

  public void setIsThrottleManoeuvreValid(boolean value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_isThrottleManoeuvreValid_set(swigCPtr, this, value);
  }

  public boolean getIsThrottleManoeuvreValid() {
    return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_isThrottleManoeuvreValid_get(swigCPtr, this);
  }

  public void setIsBrakeManoeuvreValid(boolean value) {
    isoObject_wrapJNI.RemoteControlManoeuvreMessageType_isBrakeManoeuvreValid_set(swigCPtr, this, value);
  }

  public boolean getIsBrakeManoeuvreValid() {
    return isoObject_wrapJNI.RemoteControlManoeuvreMessageType_isBrakeManoeuvreValid_get(swigCPtr, this);
  }

  public RemoteControlManoeuvreMessageType() {
    this(isoObject_wrapJNI.new_RemoteControlManoeuvreMessageType(), true);
  }

}
