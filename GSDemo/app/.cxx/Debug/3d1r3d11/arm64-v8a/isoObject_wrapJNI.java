/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.asta.isoObject;

public class isoObject_wrapJNI {
  public final static native long new_TrajDecoder__SWIG_0(boolean jarg1);
  public final static native long new_TrajDecoder__SWIG_1();
  public final static native int TrajDecoder_DecodeTRAJ(long jarg1, TrajDecoder jarg1_, long jarg2);
  public final static native boolean TrajDecoder_ExpectingTrajPoints(long jarg1, TrajDecoder jarg1_);
  public final static native long TrajDecoder_getTrajHeader(long jarg1, TrajDecoder jarg1_);
  public final static native long TrajDecoder_getTraj(long jarg1, TrajDecoder jarg1_);
  public final static native void delete_TrajDecoder(long jarg1);
  public final static native int ISO_OBJECT_STATE_UNKNOWN_get();
  public final static native int ISO_OBJECT_STATE_OFF_get();
  public final static native int ISO_OBJECT_STATE_INIT_get();
  public final static native int ISO_OBJECT_STATE_ARMED_get();
  public final static native int ISO_OBJECT_STATE_DISARMED_get();
  public final static native int ISO_OBJECT_STATE_RUNNING_get();
  public final static native int ISO_OBJECT_STATE_POSTRUN_get();
  public final static native int ISO_OBJECT_STATE_REMOTE_CONTROLLED_get();
  public final static native int ISO_OBJECT_STATE_ABORTING_get();
  public final static native int ISO_OBJECT_STATE_PRE_ARMING_get();
  public final static native int ISO_OBJECT_STATE_PRE_RUNNING_get();
  public final static native long descriptions_get();
  public final static native long stateNames_get();
  public final static native void delete_State(long jarg1);
  public final static native int State_getStateID(long jarg1, State jarg1_);
  public final static native String State_getName(long jarg1, State jarg1_);
  public final static native void State_handleEvent(long jarg1, State jarg1_, long jarg2, TestObject jarg2_, int jarg3);
  public final static native int Unknown_getStateID(long jarg1, Unknown jarg1_);
  public final static native long new_Unknown();
  public final static native void delete_Unknown(long jarg1);
  public final static native int Off_getStateID(long jarg1, Off jarg1_);
  public final static native long new_Off();
  public final static native void delete_Off(long jarg1);
  public final static native int Init_getStateID(long jarg1, Init jarg1_);
  public final static native void Init_onExit(long jarg1, Init jarg1_, long jarg2, TestObject jarg2_);
  public final static native long new_Init();
  public final static native void delete_Init(long jarg1);
  public final static native int Armed_getStateID(long jarg1, Armed jarg1_);
  public final static native long new_Armed();
  public final static native void delete_Armed(long jarg1);
  public final static native int Disarmed_getStateID(long jarg1, Disarmed jarg1_);
  public final static native void Disarmed_onEnter(long jarg1, Disarmed jarg1_, long jarg2, TestObject jarg2_);
  public final static native void Disarmed_onExit(long jarg1, Disarmed jarg1_, long jarg2, TestObject jarg2_);
  public final static native long new_Disarmed();
  public final static native void delete_Disarmed(long jarg1);
  public final static native int Running_getStateID(long jarg1, Running jarg1_);
  public final static native long new_Running();
  public final static native void delete_Running(long jarg1);
  public final static native int PostRun_getStateID(long jarg1, PostRun jarg1_);
  public final static native long new_PostRun();
  public final static native void delete_PostRun(long jarg1);
  public final static native int RemoteControlled_getStateID(long jarg1, RemoteControlled jarg1_);
  public final static native long new_RemoteControlled();
  public final static native void delete_RemoteControlled(long jarg1);
  public final static native int Aborting_getStateID(long jarg1, Aborting jarg1_);
  public final static native long new_Aborting();
  public final static native void delete_Aborting(long jarg1);
  public final static native int PreArming_getStateID(long jarg1, PreArming jarg1_);
  public final static native void PreArming_onEnter(long jarg1, PreArming jarg1_, long jarg2, TestObject jarg2_);
  public final static native long new_PreArming();
  public final static native void delete_PreArming(long jarg1);
  public final static native int PreRunning_getStateID(long jarg1, PreRunning jarg1_);
  public final static native void PreRunning_onEnter(long jarg1, PreRunning jarg1_, long jarg2, TestObject jarg2_);
  public final static native long new_PreRunning();
  public final static native void delete_PreRunning(long jarg1);
  public final static native void Transition_source_set(long jarg1, Transition jarg1_, int jarg2);
  public final static native int Transition_source_get(long jarg1, Transition jarg1_);
  public final static native void Transition_event_set(long jarg1, Transition jarg1_, int jarg2);
  public final static native int Transition_event_get(long jarg1, Transition jarg1_);
  public final static native void Transition_target_set(long jarg1, Transition jarg1_, int jarg2);
  public final static native int Transition_target_get(long jarg1, Transition jarg1_);
  public final static native long new_Transition();
  public final static native void delete_Transition(long jarg1);
  public final static native boolean LessThan(long jarg1, Transition jarg1_, long jarg2, Transition jarg2_);
  public final static native long language_get();
  public final static native long new_TestObject__SWIG_0(int jarg1);
  public final static native long new_TestObject__SWIG_1(String jarg1);
  public final static native long new_TestObject__SWIG_2();
  public final static native void delete_TestObject(long jarg1);
  public final static native void TestObject_disconnect(long jarg1, TestObject jarg1_);
  public final static native String TestObject_getCurrentStateName(long jarg1, TestObject jarg1_);
  public final static native String TestObject_getName(long jarg1, TestObject jarg1_);
  public final static native long TestObject_getPosition(long jarg1, TestObject jarg1_);
  public final static native long TestObject_getSpeed(long jarg1, TestObject jarg1_);
  public final static native long TestObject_getAcceleration(long jarg1, TestObject jarg1_);
  public final static native long TestObject_getDriveDirection(long jarg1, TestObject jarg1_);
  public final static native long TestObject_getTrajectoryHeader(long jarg1, TestObject jarg1_);
  public final static native long TestObject_getTrajectory(long jarg1, TestObject jarg1_);
  public final static native long TestObject_getOrigin(long jarg1, TestObject jarg1_);
  public final static native String TestObject_getLocalIP(long jarg1, TestObject jarg1_);
  public final static native long TestObject_getTransmitterID(long jarg1, TestObject jarg1_);
  public final static native int BasicSocket_STREAM_get();
  public final static native int BasicSocket_DATAGRAM_get();
  public final static native void BasicSocket_HostInfo_address_set(long jarg1, BasicSocket.HostInfo jarg1_, String jarg2);
  public final static native String BasicSocket_HostInfo_address_get(long jarg1, BasicSocket.HostInfo jarg1_);
  public final static native void BasicSocket_HostInfo_port_set(long jarg1, BasicSocket.HostInfo jarg1_, int jarg2);
  public final static native int BasicSocket_HostInfo_port_get(long jarg1, BasicSocket.HostInfo jarg1_);
  public final static native long new_BasicSocket_HostInfo();
  public final static native void delete_BasicSocket_HostInfo(long jarg1);
  public final static native long new_BasicSocket__SWIG_0();
  public final static native long new_BasicSocket__SWIG_1(int jarg1, boolean jarg2);
  public final static native long new_BasicSocket__SWIG_2(int jarg1);
  public final static native long new_BasicSocket__SWIG_3(int jarg1, boolean jarg2);
  public final static native long new_BasicSocket__SWIG_4(int jarg1);
  public final static native void delete_BasicSocket(long jarg1);
  public final static native long new_BasicSocket__SWIG_5(long jarg1, BasicSocket jarg1_);
  public final static native long new_basicSockRefRef(long jarg1, BasicSocket jarg1_);
  public final static native long BasicSocket_basicSockEqualsRef(long jarg1, BasicSocket jarg1_, long jarg2, BasicSocket jarg2_);
  public final static native long BasicSocket_basicSockEqualsRefRef(long jarg1, BasicSocket jarg1_, long jarg2, BasicSocket jarg2_);
  public final static native void BasicSocket_setDebug__SWIG_0(long jarg1, BasicSocket jarg1_, boolean jarg2);
  public final static native void BasicSocket_setDebug__SWIG_1(long jarg1, BasicSocket jarg1_);
  public final static native void BasicSocket_setReuseAddr__SWIG_0(long jarg1, BasicSocket jarg1_, boolean jarg2);
  public final static native void BasicSocket_setReuseAddr__SWIG_1(long jarg1, BasicSocket jarg1_);
  public final static native void BasicSocket_setKeepAlive__SWIG_0(long jarg1, BasicSocket jarg1_, boolean jarg2);
  public final static native void BasicSocket_setKeepAlive__SWIG_1(long jarg1, BasicSocket jarg1_);
  public final static native void BasicSocket_setLinger__SWIG_0(long jarg1, BasicSocket jarg1_, boolean jarg2);
  public final static native void BasicSocket_setLinger__SWIG_1(long jarg1, BasicSocket jarg1_);
  public final static native void BasicSocket_setLingerSeconds(long jarg1, BasicSocket jarg1_, int jarg2);
  public final static native void BasicSocket_setBlocking__SWIG_0(long jarg1, BasicSocket jarg1_, boolean jarg2);
  public final static native void BasicSocket_setBlocking__SWIG_1(long jarg1, BasicSocket jarg1_);
  public final static native boolean BasicSocket_getBlocking(long jarg1, BasicSocket jarg1_);
  public final static native int BasicSocket_getType(long jarg1, BasicSocket jarg1_);
  public final static native String BasicSocket_getRemoteIP(long jarg1, BasicSocket jarg1_);
  public final static native String BasicSocket_getLocalIP(long jarg1, BasicSocket jarg1_);
  public final static native int BasicSocket_getRemotePort(long jarg1, BasicSocket jarg1_);
  public final static native int BasicSocket_getLocalPort(long jarg1, BasicSocket jarg1_);
  public final static native void BasicSocket_close(long jarg1, BasicSocket jarg1_);
  public final static native void BasicSocket_open(long jarg1, BasicSocket jarg1_, int jarg2);
  public final static native long new_Socket(long jarg1, Socket jarg1_);
  public final static native long new_socketRefRef(long jarg1, Socket jarg1_);
  public final static native long Socket_sockEqualsRef(long jarg1, Socket jarg1_, long jarg2, Socket jarg2_);
  public final static native long Socket_sockEqualsRefRef(long jarg1, Socket jarg1_, long jarg2, Socket jarg2_);
  public final static native long Socket_recv(long jarg1, Socket jarg1_);
  public final static native void Socket_send__SWIG_0(long jarg1, Socket jarg1_, long jarg2);
  public final static native void Socket_send__SWIG_1(long jarg1, Socket jarg1_, long jarg2, long jarg3);
  public final static native void delete_Socket(long jarg1);
  public final static native long new_Server__SWIG_0(int jarg1, boolean jarg2);
  public final static native long new_Server__SWIG_1(int jarg1);
  public final static native long new_Server__SWIG_2(int jarg1, String jarg2, int jarg3, boolean jarg4);
  public final static native long new_Server__SWIG_3(int jarg1, String jarg2, int jarg3);
  public final static native void delete_Server(long jarg1);
  public final static native long new_TCPServer__SWIG_0(boolean jarg1);
  public final static native long new_TCPServer__SWIG_1();
  public final static native long new_TCPServer__SWIG_2(String jarg1, int jarg2, boolean jarg3);
  public final static native long new_TCPServer__SWIG_3(String jarg1, int jarg2);
  public final static native long TCPServer_await__SWIG_0(long jarg1, TCPServer jarg1_);
  public final static native long TCPServer_await__SWIG_1(long jarg1, TCPServer jarg1_, String jarg2, int jarg3);
  public final static native void delete_TCPServer(long jarg1);
  public final static native long new_UDPServer__SWIG_0(boolean jarg1);
  public final static native long new_UDPServer__SWIG_1();
  public final static native long new_UDPServer__SWIG_2(String jarg1, int jarg2, boolean jarg3);
  public final static native long new_UDPServer__SWIG_3(String jarg1, int jarg2);
  public final static native void UDPServer_bind(long jarg1, UDPServer jarg1_, long jarg2, BasicSocket.HostInfo jarg2_);
  public final static native long UDPServer_recvfrom(long jarg1, UDPServer jarg1_);
  public final static native void UDPServer_sendto__SWIG_0(long jarg1, UDPServer jarg1_, long jarg2);
  public final static native void UDPServer_sendto__SWIG_1(long jarg1, UDPServer jarg1_, long jarg2, long jarg3);
  public final static native void delete_UDPServer(long jarg1);
  public final static native int ISO_22133_OBJECT_UDP_PORT_get();
  public final static native int ISO_22133_DEFAULT_OBJECT_TCP_PORT_get();
  public final static native void ObjectSettingsType_desiredTransmitterID_set(long jarg1, ObjectSettingsType jarg1_, long jarg2);
  public final static native long ObjectSettingsType_desiredTransmitterID_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native void ObjectSettingsType_coordinateSystemOrigin_set(long jarg1, ObjectSettingsType jarg1_, long jarg2);
  public final static native long ObjectSettingsType_coordinateSystemOrigin_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native void ObjectSettingsType_currentTime_set(long jarg1, ObjectSettingsType jarg1_, long jarg2, timeval jarg2_);
  public final static native long ObjectSettingsType_currentTime_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native void ObjectSettingsType_maxPositionDeviation_m_set(long jarg1, ObjectSettingsType jarg1_, double jarg2);
  public final static native double ObjectSettingsType_maxPositionDeviation_m_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native void ObjectSettingsType_maxLateralDeviation_m_set(long jarg1, ObjectSettingsType jarg1_, double jarg2);
  public final static native double ObjectSettingsType_maxLateralDeviation_m_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native void ObjectSettingsType_minRequiredPositioningAccuracy_m_set(long jarg1, ObjectSettingsType jarg1_, double jarg2);
  public final static native double ObjectSettingsType_minRequiredPositioningAccuracy_m_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native void ObjectSettingsType_isTransmitterIDValid_set(long jarg1, ObjectSettingsType jarg1_, boolean jarg2);
  public final static native boolean ObjectSettingsType_isTransmitterIDValid_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native void ObjectSettingsType_isPositionDeviationLimited_set(long jarg1, ObjectSettingsType jarg1_, boolean jarg2);
  public final static native boolean ObjectSettingsType_isPositionDeviationLimited_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native void ObjectSettingsType_isLateralDeviationLimited_set(long jarg1, ObjectSettingsType jarg1_, boolean jarg2);
  public final static native boolean ObjectSettingsType_isLateralDeviationLimited_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native void ObjectSettingsType_isPositioningAccuracyRequired_set(long jarg1, ObjectSettingsType jarg1_, boolean jarg2);
  public final static native boolean ObjectSettingsType_isPositioningAccuracyRequired_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native void ObjectSettingsType_isTimestampValid_set(long jarg1, ObjectSettingsType jarg1_, boolean jarg2);
  public final static native boolean ObjectSettingsType_isTimestampValid_get(long jarg1, ObjectSettingsType jarg1_);
  public final static native long new_ObjectSettingsType();
  public final static native void delete_ObjectSettingsType(long jarg1);
  public final static native int ISO_TRAJ_HEADER_SIZE_get();
  public final static native int ISO_TRAJ_WAYPOINT_SIZE_get();
  public final static native void TrajectoryHeaderType_trajectoryID_set(long jarg1, TrajectoryHeaderType jarg1_, int jarg2);
  public final static native int TrajectoryHeaderType_trajectoryID_get(long jarg1, TrajectoryHeaderType jarg1_);
  public final static native void TrajectoryHeaderType_trajectoryName_set(long jarg1, TrajectoryHeaderType jarg1_, String jarg2);
  public final static native String TrajectoryHeaderType_trajectoryName_get(long jarg1, TrajectoryHeaderType jarg1_);
  public final static native void TrajectoryHeaderType_trajectoryVersion_set(long jarg1, TrajectoryHeaderType jarg1_, int jarg2);
  public final static native int TrajectoryHeaderType_trajectoryVersion_get(long jarg1, TrajectoryHeaderType jarg1_);
  public final static native void TrajectoryHeaderType_trajectoryLength_set(long jarg1, TrajectoryHeaderType jarg1_, long jarg2);
  public final static native long TrajectoryHeaderType_trajectoryLength_get(long jarg1, TrajectoryHeaderType jarg1_);
  public final static native void TrajectoryHeaderType_nWayPoints_set(long jarg1, TrajectoryHeaderType jarg1_, long jarg2);
  public final static native long TrajectoryHeaderType_nWayPoints_get(long jarg1, TrajectoryHeaderType jarg1_);
  public final static native long new_TrajectoryHeaderType();
  public final static native void delete_TrajectoryHeaderType(long jarg1);
  public final static native void TrajectoryWaypointType_relativeTime_set(long jarg1, TrajectoryWaypointType jarg1_, long jarg2, timeval jarg2_);
  public final static native long TrajectoryWaypointType_relativeTime_get(long jarg1, TrajectoryWaypointType jarg1_);
  public final static native void TrajectoryWaypointType_pos_set(long jarg1, TrajectoryWaypointType jarg1_, long jarg2);
  public final static native long TrajectoryWaypointType_pos_get(long jarg1, TrajectoryWaypointType jarg1_);
  public final static native void TrajectoryWaypointType_spd_set(long jarg1, TrajectoryWaypointType jarg1_, long jarg2);
  public final static native long TrajectoryWaypointType_spd_get(long jarg1, TrajectoryWaypointType jarg1_);
  public final static native void TrajectoryWaypointType_acc_set(long jarg1, TrajectoryWaypointType jarg1_, long jarg2);
  public final static native long TrajectoryWaypointType_acc_get(long jarg1, TrajectoryWaypointType jarg1_);
  public final static native void TrajectoryWaypointType_curvature_set(long jarg1, TrajectoryWaypointType jarg1_, long jarg2);
  public final static native long TrajectoryWaypointType_curvature_get(long jarg1, TrajectoryWaypointType jarg1_);
  public final static native long new_TrajectoryWaypointType();
  public final static native void delete_TrajectoryWaypointType(long jarg1);
  public final static native int OBJECT_COMMAND_ARM_get();
  public final static native int OBJECT_COMMAND_DISARM_get();
  public final static native int OBJECT_COMMAND_REMOTE_CONTROL_get();
  public final static native int OBJECT_COMMAND_ALL_CLEAR_get();
  public final static native int HEAB_FREQUENCY_HZ_get();
  public final static native int CONTROL_CENTER_STATUS_INIT_get();
  public final static native int CONTROL_CENTER_STATUS_READY_get();
  public final static native int CONTROL_CENTER_STATUS_ABORT_get();
  public final static native int CONTROL_CENTER_STATUS_RUNNING_get();
  public final static native int CONTROL_CENTER_STATUS_TEST_DONE_get();
  public final static native int CONTROL_CENTER_STATUS_NORMAL_STOP_get();
  public final static native int MONR_EXPECTED_FREQUENCY_HZ_get();
  public final static native int DIRECT_CONTROL_TRANSMITTER_ID_REQUEST_get();
  public final static native int TRIGGER_UNDEFINED_get();
  public final static native int TRIGGER_TYPE_1_get();
  public final static native int TRIGGER_SPEED_get();
  public final static native int TRIGGER_DISTANCE_get();
  public final static native int TRIGGER_ACCELERATION_get();
  public final static native int TRIGGER_LANE_CHANGED_get();
  public final static native int TRIGGER_LANE_OFFSET_get();
  public final static native int TRIGGER_POSITION_REACHED_get();
  public final static native int TRIGGER_POSITION_LEFT_get();
  public final static native int TRIGGER_POSITION_OFFSET_get();
  public final static native int TRIGGER_STEERING_ANGLE_get();
  public final static native int TRIGGER_THROTTLE_VALUE_get();
  public final static native int TRIGGER_BRAKE_get();
  public final static native int TRIGGER_ACTIVE_TRAJECTORY_get();
  public final static native int TRIGGER_OTHER_OBJECT_FEATURE_get();
  public final static native int TRIGGER_INFRASTRUCTURE_get();
  public final static native int TRIGGER_TEST_SCENARIO_EVENT_get();
  public final static native int TRIGGER_MISC_DIGITAL_INPUT_get();
  public final static native int TRIGGER_MISC_ANALOG_INPUT_get();
  public final static native int TRIGGER_TIMER_EVENT_OCCURRED_get();
  public final static native int TRIGGER_MODE_CHANGED_get();
  public final static native int TRIGGER_UNAVAILABLE_get();
  public final static native int TRIGGER_PARAMETER_FALSE_get();
  public final static native int TRIGGER_PARAMETER_TRUE_get();
  public final static native int TRIGGER_PARAMETER_RELEASED_get();
  public final static native int TRIGGER_PARAMETER_PRESSED_get();
  public final static native int TRIGGER_PARAMETER_LOW_get();
  public final static native int TRIGGER_PARAMETER_HIGH_get();
  public final static native int TRIGGER_PARAMETER_RISING_EDGE_get();
  public final static native int TRIGGER_PARAMETER_FALLING_EDGE_get();
  public final static native int TRIGGER_PARAMETER_ANY_EDGE_get();
  public final static native int TRIGGER_PARAMETER_RELATIVE_get();
  public final static native int TRIGGER_PARAMETER_ABSOLUTE_get();
  public final static native int TRIGGER_PARAMETER_VALUE_get();
  public final static native int TRIGGER_PARAMETER_MIN_get();
  public final static native int TRIGGER_PARAMETER_MAX_get();
  public final static native int TRIGGER_PARAMETER_MEAN_get();
  public final static native int TRIGGER_PARAMETER_EQUAL_TO_get();
  public final static native int TRIGGER_PARAMETER_GREATER_THAN_get();
  public final static native int TRIGGER_PARAMETER_GREATER_THAN_OR_EQUAL_TO_get();
  public final static native int TRIGGER_PARAMETER_LESS_THAN_get();
  public final static native int TRIGGER_PARAMETER_LESS_THAN_OR_EQUAL_TO_get();
  public final static native int TRIGGER_PARAMETER_NOT_EQUAL_TO_get();
  public final static native int TRIGGER_PARAMETER_X_get();
  public final static native int TRIGGER_PARAMETER_Y_get();
  public final static native int TRIGGER_PARAMETER_Z_get();
  public final static native int TRIGGER_PARAMETER_TIME_get();
  public final static native int TRIGGER_PARAMETER_DATE_get();
  public final static native int TRIGGER_PARAMETER_RULE_get();
  public final static native int TRIGGER_PARAMETER_UNAVAILABLE_get();
  public final static native int ACTION_NONE_get();
  public final static native int ACTION_TYPE_1_get();
  public final static native int ACTION_TYPE_2_get();
  public final static native int ACTION_SET_SPEED_get();
  public final static native int ACTION_SET_DISTANCE_get();
  public final static native int ACTION_SET_ACCELERATION_get();
  public final static native int ACTION_LANE_CHANGE_get();
  public final static native int ACTION_LANE_OFFSET_get();
  public final static native int ACTION_SET_POSITION_get();
  public final static native int ACTION_SET_STEERING_ANGLE_get();
  public final static native int ACTION_SET_TRHOTTLE_VALUE_get();
  public final static native int ACTION_BRAKE_get();
  public final static native int ACTION_FOLLOW_TRAJECTORY_get();
  public final static native int ACTION_OTHER_OBJECT_FEATURE_get();
  public final static native int ACTION_INFRASTRUCTURE_get();
  public final static native int ACTION_TEST_SCENARIO_COMMAND_get();
  public final static native int ACTION_MISC_DIGITAL_OUTPUT_get();
  public final static native int ACTION_MISC_ANALOG_OUTPUT_get();
  public final static native int ACTION_START_TIMER_get();
  public final static native int ACTION_MODE_CHANGE_get();
  public final static native int ACTION_UNAVAILABLE_get();
  public final static native int ACTION_PARAMETER_SET_FALSE_get();
  public final static native int ACTION_PARAMETER_SET_TRUE_get();
  public final static native int ACTION_PARAMETER_RELEASE_get();
  public final static native int ACTION_PARAMETER_PRESS_get();
  public final static native int ACTION_PARAMETER_SET_VALUE_get();
  public final static native int ACTION_PARAMETER_MIN_get();
  public final static native int ACTION_PARAMETER_MAX_get();
  public final static native int ACTION_PARAMETER_X_get();
  public final static native int ACTION_PARAMETER_Y_get();
  public final static native int ACTION_PARAMETER_Z_get();
  public final static native int ACTION_PARAMETER_VS_BRAKE_WARNING_get();
  public final static native int ACTION_PARAMETER_VS_SEND_START_get();
  public final static native int ACTION_PARAMETER_UNAVAILABLE_get();
  public final static native int MESSAGE_LENGTH_ERROR_get();
  public final static native int MESSAGE_TYPE_ERROR_get();
  public final static native int MESSAGE_CRC_ERROR_get();
  public final static native int MESSAGE_VERSION_ERROR_get();
  public final static native int MESSAGE_VALUE_ID_ERROR_get();
  public final static native int MESSAGE_SYNC_WORD_ERROR_get();
  public final static native int MESSAGE_CONTENT_OUT_OF_RANGE_get();
  public final static native int ISO_FUNCTION_ERROR_get();
  public final static native int MESSAGE_ID_INVALID_get();
  public final static native int MESSAGE_ID_TRAJ_get();
  public final static native int MESSAGE_ID_OSEM_get();
  public final static native int MESSAGE_ID_OSTM_get();
  public final static native int MESSAGE_ID_STRT_get();
  public final static native int MESSAGE_ID_HEAB_get();
  public final static native int MESSAGE_ID_MONR_get();
  public final static native int MESSAGE_ID_MONR2_get();
  public final static native int MESSAGE_ID_SOWM_get();
  public final static native int MESSAGE_ID_INFO_get();
  public final static native int MESSAGE_ID_RCMM_get();
  public final static native int MESSAGE_ID_SYPM_get();
  public final static native int MESSAGE_ID_MTSP_get();
  public final static native int MESSAGE_ID_TRCM_get();
  public final static native int MESSAGE_ID_ACCM_get();
  public final static native int MESSAGE_ID_TREO_get();
  public final static native int MESSAGE_ID_EXAC_get();
  public final static native int MESSAGE_ID_CATA_get();
  public final static native int MESSAGE_ID_RCCM_get();
  public final static native int MESSAGE_ID_RCRT_get();
  public final static native int MESSAGE_ID_PIME_get();
  public final static native int MESSAGE_ID_COSE_get();
  public final static native int MESSAGE_ID_MOMA_get();
  public final static native int MESSAGE_ID_RESERVE_RANGE_1_LOWER_LIMIT_get();
  public final static native int MESSAGE_ID_RESERVE_RANGE_1_UPPER_LIMIT_get();
  public final static native int MESSAGE_ID_RESERVE_RANGE_2_LOWER_LIMIT_get();
  public final static native int MESSAGE_ID_RESERVE_RANGE_2_UPPER_LIMIT_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_LOWER_LIMIT_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_UPPER_LIMIT_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_RISE_INSUP_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_ASTAZERO_OPRO_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_ASTAZERO_FOPR_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_ASTAZERO_PODI_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_ASTAZERO_DCTI_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_ASTAZERO_GDRM_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_ASTAZERO_RDCA_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_ASTAZERO_GREM_get();
  public final static native int MESSAGE_ID_VENDOR_SPECIFIC_ASTAZERO_DCMM_get();
  public final static native int SUPERVISOR_COMMAND_NORMAL_get();
  public final static native int SUPERVISOR_COMMAND_DEBUG_get();
  public final static native int OBJECT_CATEGORY_UNKNOWN_get();
  public final static native int OBJECT_CATEGORY_CAR_get();
  public final static native int OBJECT_CATEGORY_BICYCLE_get();
  public final static native int OBJECT_CATEGORY_PEDESTRIAN_get();
  public final static native int ACTOR_TYPE_UNKNOWN_get();
  public final static native int ACTOR_TYPE_VIRTUAL_OBJECT_get();
  public final static native int ACTOR_TYPE_REAL_OBJECT_get();
  public final static native int OPERATION_MODE_UNKNOWN_get();
  public final static native int OPERATION_MODE_STATIC_get();
  public final static native int OPERATION_MODE_PREDEFINED_TRAJECTORY_get();
  public final static native int OPERATION_MODE_DYNAMIC_TRAJECTORY_get();
  public final static native int OPERATION_MODE_AUTONOMOUS_VUT_get();
  public final static native int ISO_UNIT_TYPE_STEERING_DEGREES_get();
  public final static native int ISO_UNIT_TYPE_STEERING_PERCENTAGE_get();
  public final static native int ISO_UNIT_TYPE_SPEED_METER_SECOND_get();
  public final static native int ISO_UNIT_TYPE_SPEED_PERCENTAGE_get();
  public final static native int ISO_UNIT_TYPE_THROTTLE_PERCENTAGE_get();
  public final static native int ISO_UNIT_TYPE_BRAKE_PERCENTAGE_get();
  public final static native int GREM_STATUS_OK_get();
  public final static native int GREM_DATA_MISSING_get();
  public final static native int GREM_STATE_ERROR_get();
  public final static native int GREM_TIME_SLIPPAGE_get();
  public final static native int GREM_WRONG_ID_get();
  public final static native int GREM_OUT_OF_RANGE_get();
  public final static native int MANOEUVRE_NONE_get();
  public final static native int MANOEUVRE_BACK_TO_START_get();
  public final static native void RemoteControlManoeuvreMessageType_status_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, short jarg2);
  public final static native short RemoteControlManoeuvreMessageType_status_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_steeringMan_pct_set(long jarg1, RemoteControlManoeuvreMessageType.steeringMan jarg1_, double jarg2);
  public final static native double RemoteControlManoeuvreMessageType_steeringMan_pct_get(long jarg1, RemoteControlManoeuvreMessageType.steeringMan jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_steeringMan_rad_set(long jarg1, RemoteControlManoeuvreMessageType.steeringMan jarg1_, double jarg2);
  public final static native double RemoteControlManoeuvreMessageType_steeringMan_rad_get(long jarg1, RemoteControlManoeuvreMessageType.steeringMan jarg1_);
  public final static native long new_RemoteControlManoeuvreMessageType_steeringMan();
  public final static native void delete_RemoteControlManoeuvreMessageType_steeringMan(long jarg1);
  public final static native void RemoteControlManoeuvreMessageType_steeringManoeuvre_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, long jarg2, RemoteControlManoeuvreMessageType.steeringMan jarg2_);
  public final static native long RemoteControlManoeuvreMessageType_steeringManoeuvre_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_speedMan_pct_set(long jarg1, RemoteControlManoeuvreMessageType.speedMan jarg1_, double jarg2);
  public final static native double RemoteControlManoeuvreMessageType_speedMan_pct_get(long jarg1, RemoteControlManoeuvreMessageType.speedMan jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_speedMan_m_s_set(long jarg1, RemoteControlManoeuvreMessageType.speedMan jarg1_, double jarg2);
  public final static native double RemoteControlManoeuvreMessageType_speedMan_m_s_get(long jarg1, RemoteControlManoeuvreMessageType.speedMan jarg1_);
  public final static native long new_RemoteControlManoeuvreMessageType_speedMan();
  public final static native void delete_RemoteControlManoeuvreMessageType_speedMan(long jarg1);
  public final static native void RemoteControlManoeuvreMessageType_speedManoeuvre_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, long jarg2, RemoteControlManoeuvreMessageType.speedMan jarg2_);
  public final static native long RemoteControlManoeuvreMessageType_speedManoeuvre_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_throttleMan_pct_set(long jarg1, RemoteControlManoeuvreMessageType.throttleMan jarg1_, double jarg2);
  public final static native double RemoteControlManoeuvreMessageType_throttleMan_pct_get(long jarg1, RemoteControlManoeuvreMessageType.throttleMan jarg1_);
  public final static native long new_RemoteControlManoeuvreMessageType_throttleMan();
  public final static native void delete_RemoteControlManoeuvreMessageType_throttleMan(long jarg1);
  public final static native void RemoteControlManoeuvreMessageType_throttleManoeuvre_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, long jarg2, RemoteControlManoeuvreMessageType.throttleMan jarg2_);
  public final static native long RemoteControlManoeuvreMessageType_throttleManoeuvre_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_brakeMan_pct_set(long jarg1, RemoteControlManoeuvreMessageType.brakeMan jarg1_, double jarg2);
  public final static native double RemoteControlManoeuvreMessageType_brakeMan_pct_get(long jarg1, RemoteControlManoeuvreMessageType.brakeMan jarg1_);
  public final static native long new_RemoteControlManoeuvreMessageType_brakeMan();
  public final static native void delete_RemoteControlManoeuvreMessageType_brakeMan(long jarg1);
  public final static native void RemoteControlManoeuvreMessageType_brakeManoeuvre_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, long jarg2, RemoteControlManoeuvreMessageType.brakeMan jarg2_);
  public final static native long RemoteControlManoeuvreMessageType_brakeManoeuvre_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_command_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, int jarg2);
  public final static native int RemoteControlManoeuvreMessageType_command_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_steeringUnit_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, int jarg2);
  public final static native int RemoteControlManoeuvreMessageType_steeringUnit_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_speedUnit_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, int jarg2);
  public final static native int RemoteControlManoeuvreMessageType_speedUnit_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_throttleUnit_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, int jarg2);
  public final static native int RemoteControlManoeuvreMessageType_throttleUnit_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_brakeUnit_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, int jarg2);
  public final static native int RemoteControlManoeuvreMessageType_brakeUnit_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_isSteeringManoeuvreValid_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, boolean jarg2);
  public final static native boolean RemoteControlManoeuvreMessageType_isSteeringManoeuvreValid_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_isSpeedManoeuvreValid_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, boolean jarg2);
  public final static native boolean RemoteControlManoeuvreMessageType_isSpeedManoeuvreValid_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_isThrottleManoeuvreValid_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, boolean jarg2);
  public final static native boolean RemoteControlManoeuvreMessageType_isThrottleManoeuvreValid_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native void RemoteControlManoeuvreMessageType_isBrakeManoeuvreValid_set(long jarg1, RemoteControlManoeuvreMessageType jarg1_, boolean jarg2);
  public final static native boolean RemoteControlManoeuvreMessageType_isBrakeManoeuvreValid_get(long jarg1, RemoteControlManoeuvreMessageType jarg1_);
  public final static native long new_RemoteControlManoeuvreMessageType();
  public final static native void delete_RemoteControlManoeuvreMessageType(long jarg1);
  public final static native void HeabMessageDataType_transmitterID_set(long jarg1, HeabMessageDataType jarg1_, long jarg2);
  public final static native long HeabMessageDataType_transmitterID_get(long jarg1, HeabMessageDataType jarg1_);
  public final static native void HeabMessageDataType_dataTimestamp_set(long jarg1, HeabMessageDataType jarg1_, long jarg2, timeval jarg2_);
  public final static native long HeabMessageDataType_dataTimestamp_get(long jarg1, HeabMessageDataType jarg1_);
  public final static native void HeabMessageDataType_controlCenterStatus_set(long jarg1, HeabMessageDataType jarg1_, int jarg2);
  public final static native int HeabMessageDataType_controlCenterStatus_get(long jarg1, HeabMessageDataType jarg1_);
  public final static native long new_HeabMessageDataType();
  public final static native void delete_HeabMessageDataType(long jarg1);
  public final static native void DctiMessageDataType_totalCount_set(long jarg1, DctiMessageDataType jarg1_, int jarg2);
  public final static native int DctiMessageDataType_totalCount_get(long jarg1, DctiMessageDataType jarg1_);
  public final static native void DctiMessageDataType_counter_set(long jarg1, DctiMessageDataType jarg1_, int jarg2);
  public final static native int DctiMessageDataType_counter_get(long jarg1, DctiMessageDataType jarg1_);
  public final static native void DctiMessageDataType_transmitterID_set(long jarg1, DctiMessageDataType jarg1_, long jarg2);
  public final static native long DctiMessageDataType_transmitterID_get(long jarg1, DctiMessageDataType jarg1_);
  public final static native long new_DctiMessageDataType();
  public final static native void delete_DctiMessageDataType(long jarg1);
  public final static native void RequestControlActionType_executingID_set(long jarg1, RequestControlActionType jarg1_, long jarg2);
  public final static native long RequestControlActionType_executingID_get(long jarg1, RequestControlActionType jarg1_);
  public final static native void RequestControlActionType_dataTimestamp_set(long jarg1, RequestControlActionType jarg1_, long jarg2, timeval jarg2_);
  public final static native long RequestControlActionType_dataTimestamp_get(long jarg1, RequestControlActionType jarg1_);
  public final static native void RequestControlActionType_steeringActions_pct_set(long jarg1, RequestControlActionType.steeringActions jarg1_, double jarg2);
  public final static native double RequestControlActionType_steeringActions_pct_get(long jarg1, RequestControlActionType.steeringActions jarg1_);
  public final static native void RequestControlActionType_steeringActions_rad_set(long jarg1, RequestControlActionType.steeringActions jarg1_, double jarg2);
  public final static native double RequestControlActionType_steeringActions_rad_get(long jarg1, RequestControlActionType.steeringActions jarg1_);
  public final static native long new_RequestControlActionType_steeringActions();
  public final static native void delete_RequestControlActionType_steeringActions(long jarg1);
  public final static native void RequestControlActionType_steeringAction_set(long jarg1, RequestControlActionType jarg1_, long jarg2, RequestControlActionType.steeringActions jarg2_);
  public final static native long RequestControlActionType_steeringAction_get(long jarg1, RequestControlActionType jarg1_);
  public final static native void RequestControlActionType_speedActions_pct_set(long jarg1, RequestControlActionType.speedActions jarg1_, double jarg2);
  public final static native double RequestControlActionType_speedActions_pct_get(long jarg1, RequestControlActionType.speedActions jarg1_);
  public final static native void RequestControlActionType_speedActions_m_s_set(long jarg1, RequestControlActionType.speedActions jarg1_, double jarg2);
  public final static native double RequestControlActionType_speedActions_m_s_get(long jarg1, RequestControlActionType.speedActions jarg1_);
  public final static native long new_RequestControlActionType_speedActions();
  public final static native void delete_RequestControlActionType_speedActions(long jarg1);
  public final static native void RequestControlActionType_speedAction_set(long jarg1, RequestControlActionType jarg1_, long jarg2, RequestControlActionType.speedActions jarg2_);
  public final static native long RequestControlActionType_speedAction_get(long jarg1, RequestControlActionType jarg1_);
  public final static native void RequestControlActionType_isSteeringActionValid_set(long jarg1, RequestControlActionType jarg1_, boolean jarg2);
  public final static native boolean RequestControlActionType_isSteeringActionValid_get(long jarg1, RequestControlActionType jarg1_);
  public final static native void RequestControlActionType_isSpeedActionValid_set(long jarg1, RequestControlActionType jarg1_, boolean jarg2);
  public final static native boolean RequestControlActionType_isSpeedActionValid_get(long jarg1, RequestControlActionType jarg1_);
  public final static native void RequestControlActionType_steeringUnit_set(long jarg1, RequestControlActionType jarg1_, int jarg2);
  public final static native int RequestControlActionType_steeringUnit_get(long jarg1, RequestControlActionType jarg1_);
  public final static native void RequestControlActionType_speedUnit_set(long jarg1, RequestControlActionType jarg1_, int jarg2);
  public final static native int RequestControlActionType_speedUnit_get(long jarg1, RequestControlActionType jarg1_);
  public final static native long new_RequestControlActionType();
  public final static native void delete_RequestControlActionType(long jarg1);
  public final static native void GdrmMessageDataType_dataCode_set(long jarg1, GdrmMessageDataType jarg1_, int jarg2);
  public final static native int GdrmMessageDataType_dataCode_get(long jarg1, GdrmMessageDataType jarg1_);
  public final static native long new_GdrmMessageDataType();
  public final static native void delete_GdrmMessageDataType(long jarg1);
  public final static native void PeerObjectInjectionType_foreignTransmitterID_set(long jarg1, PeerObjectInjectionType jarg1_, long jarg2);
  public final static native long PeerObjectInjectionType_foreignTransmitterID_get(long jarg1, PeerObjectInjectionType jarg1_);
  public final static native void PeerObjectInjectionType_dataTimestamp_set(long jarg1, PeerObjectInjectionType jarg1_, long jarg2, timeval jarg2_);
  public final static native long PeerObjectInjectionType_dataTimestamp_get(long jarg1, PeerObjectInjectionType jarg1_);
  public final static native void PeerObjectInjectionType_state_set(long jarg1, PeerObjectInjectionType jarg1_, long jarg2);
  public final static native long PeerObjectInjectionType_state_get(long jarg1, PeerObjectInjectionType jarg1_);
  public final static native void PeerObjectInjectionType_position_set(long jarg1, PeerObjectInjectionType jarg1_, long jarg2);
  public final static native long PeerObjectInjectionType_position_get(long jarg1, PeerObjectInjectionType jarg1_);
  public final static native void PeerObjectInjectionType_speed_set(long jarg1, PeerObjectInjectionType jarg1_, long jarg2);
  public final static native long PeerObjectInjectionType_speed_get(long jarg1, PeerObjectInjectionType jarg1_);
  public final static native void PeerObjectInjectionType_pitch_rad_set(long jarg1, PeerObjectInjectionType jarg1_, double jarg2);
  public final static native double PeerObjectInjectionType_pitch_rad_get(long jarg1, PeerObjectInjectionType jarg1_);
  public final static native void PeerObjectInjectionType_roll_rad_set(long jarg1, PeerObjectInjectionType jarg1_, double jarg2);
  public final static native double PeerObjectInjectionType_roll_rad_get(long jarg1, PeerObjectInjectionType jarg1_);
  public final static native void PeerObjectInjectionType_isPitchValid_set(long jarg1, PeerObjectInjectionType jarg1_, boolean jarg2);
  public final static native boolean PeerObjectInjectionType_isPitchValid_get(long jarg1, PeerObjectInjectionType jarg1_);
  public final static native void PeerObjectInjectionType_isRollValid_set(long jarg1, PeerObjectInjectionType jarg1_, boolean jarg2);
  public final static native boolean PeerObjectInjectionType_isRollValid_get(long jarg1, PeerObjectInjectionType jarg1_);
  public final static native long new_PeerObjectInjectionType();
  public final static native void delete_PeerObjectInjectionType(long jarg1);
  public final static native void ObjectPropertiesType_objectID_set(long jarg1, ObjectPropertiesType jarg1_, long jarg2);
  public final static native long ObjectPropertiesType_objectID_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_objectType_set(long jarg1, ObjectPropertiesType jarg1_, int jarg2);
  public final static native int ObjectPropertiesType_objectType_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_actorType_set(long jarg1, ObjectPropertiesType jarg1_, int jarg2);
  public final static native int ObjectPropertiesType_actorType_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_operationMode_set(long jarg1, ObjectPropertiesType jarg1_, int jarg2);
  public final static native int ObjectPropertiesType_operationMode_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_mass_kg_set(long jarg1, ObjectPropertiesType jarg1_, double jarg2);
  public final static native double ObjectPropertiesType_mass_kg_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_objectXDimension_m_set(long jarg1, ObjectPropertiesType jarg1_, double jarg2);
  public final static native double ObjectPropertiesType_objectXDimension_m_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_objectYDimension_m_set(long jarg1, ObjectPropertiesType jarg1_, double jarg2);
  public final static native double ObjectPropertiesType_objectYDimension_m_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_objectZDimension_m_set(long jarg1, ObjectPropertiesType jarg1_, double jarg2);
  public final static native double ObjectPropertiesType_objectZDimension_m_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_positionDisplacementX_m_set(long jarg1, ObjectPropertiesType jarg1_, double jarg2);
  public final static native double ObjectPropertiesType_positionDisplacementX_m_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_positionDisplacementY_m_set(long jarg1, ObjectPropertiesType jarg1_, double jarg2);
  public final static native double ObjectPropertiesType_positionDisplacementY_m_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_positionDisplacementZ_m_set(long jarg1, ObjectPropertiesType jarg1_, double jarg2);
  public final static native double ObjectPropertiesType_positionDisplacementZ_m_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_isMassValid_set(long jarg1, ObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ObjectPropertiesType_isMassValid_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_isObjectXDimensionValid_set(long jarg1, ObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ObjectPropertiesType_isObjectXDimensionValid_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_isObjectYDimensionValid_set(long jarg1, ObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ObjectPropertiesType_isObjectYDimensionValid_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_isObjectZDimensionValid_set(long jarg1, ObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ObjectPropertiesType_isObjectZDimensionValid_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_isObjectXDisplacementValid_set(long jarg1, ObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ObjectPropertiesType_isObjectXDisplacementValid_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_isObjectYDisplacementValid_set(long jarg1, ObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ObjectPropertiesType_isObjectYDisplacementValid_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native void ObjectPropertiesType_isObjectZDisplacementValid_set(long jarg1, ObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ObjectPropertiesType_isObjectZDisplacementValid_get(long jarg1, ObjectPropertiesType jarg1_);
  public final static native long new_ObjectPropertiesType();
  public final static native void delete_ObjectPropertiesType(long jarg1);
  public final static native void ForeignObjectPropertiesType_foreignTransmitterID_set(long jarg1, ForeignObjectPropertiesType jarg1_, long jarg2);
  public final static native long ForeignObjectPropertiesType_foreignTransmitterID_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_objectType_set(long jarg1, ForeignObjectPropertiesType jarg1_, int jarg2);
  public final static native int ForeignObjectPropertiesType_objectType_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_actorType_set(long jarg1, ForeignObjectPropertiesType jarg1_, int jarg2);
  public final static native int ForeignObjectPropertiesType_actorType_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_operationMode_set(long jarg1, ForeignObjectPropertiesType jarg1_, int jarg2);
  public final static native int ForeignObjectPropertiesType_operationMode_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_mass_kg_set(long jarg1, ForeignObjectPropertiesType jarg1_, double jarg2);
  public final static native double ForeignObjectPropertiesType_mass_kg_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_objectXDimension_m_set(long jarg1, ForeignObjectPropertiesType jarg1_, double jarg2);
  public final static native double ForeignObjectPropertiesType_objectXDimension_m_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_objectYDimension_m_set(long jarg1, ForeignObjectPropertiesType jarg1_, double jarg2);
  public final static native double ForeignObjectPropertiesType_objectYDimension_m_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_objectZDimension_m_set(long jarg1, ForeignObjectPropertiesType jarg1_, double jarg2);
  public final static native double ForeignObjectPropertiesType_objectZDimension_m_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_positionDisplacementX_m_set(long jarg1, ForeignObjectPropertiesType jarg1_, double jarg2);
  public final static native double ForeignObjectPropertiesType_positionDisplacementX_m_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_positionDisplacementY_m_set(long jarg1, ForeignObjectPropertiesType jarg1_, double jarg2);
  public final static native double ForeignObjectPropertiesType_positionDisplacementY_m_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_positionDisplacementZ_m_set(long jarg1, ForeignObjectPropertiesType jarg1_, double jarg2);
  public final static native double ForeignObjectPropertiesType_positionDisplacementZ_m_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_isMassValid_set(long jarg1, ForeignObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ForeignObjectPropertiesType_isMassValid_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_isObjectXDimensionValid_set(long jarg1, ForeignObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ForeignObjectPropertiesType_isObjectXDimensionValid_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_isObjectYDimensionValid_set(long jarg1, ForeignObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ForeignObjectPropertiesType_isObjectYDimensionValid_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_isObjectZDimensionValid_set(long jarg1, ForeignObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ForeignObjectPropertiesType_isObjectZDimensionValid_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_isObjectXDisplacementValid_set(long jarg1, ForeignObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ForeignObjectPropertiesType_isObjectXDisplacementValid_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_isObjectYDisplacementValid_set(long jarg1, ForeignObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ForeignObjectPropertiesType_isObjectYDisplacementValid_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native void ForeignObjectPropertiesType_isObjectZDisplacementValid_set(long jarg1, ForeignObjectPropertiesType jarg1_, boolean jarg2);
  public final static native boolean ForeignObjectPropertiesType_isObjectZDisplacementValid_get(long jarg1, ForeignObjectPropertiesType jarg1_);
  public final static native long new_ForeignObjectPropertiesType();
  public final static native void delete_ForeignObjectPropertiesType(long jarg1);
  public final static native void StartMessageType_startTime_set(long jarg1, StartMessageType jarg1_, long jarg2, timeval jarg2_);
  public final static native long StartMessageType_startTime_get(long jarg1, StartMessageType jarg1_);
  public final static native void StartMessageType_isTimestampValid_set(long jarg1, StartMessageType jarg1_, boolean jarg2);
  public final static native boolean StartMessageType_isTimestampValid_get(long jarg1, StartMessageType jarg1_);
  public final static native long new_StartMessageType();
  public final static native void delete_StartMessageType(long jarg1);
  public final static native void GeneralResponseMessageType_status_set(long jarg1, GeneralResponseMessageType jarg1_, int jarg2);
  public final static native int GeneralResponseMessageType_status_get(long jarg1, GeneralResponseMessageType jarg1_);
  public final static native long new_GeneralResponseMessageType();
  public final static native void delete_GeneralResponseMessageType(long jarg1);
  public final static native int encodeMONRMessage(long jarg1, timeval jarg1_, long jarg2, long jarg3, long jarg4, short jarg5, short jarg6, short jarg7, short jarg8, String jarg9, long jarg10, char jarg11);
  public final static native int decodeMONRMessage(String jarg1, long jarg2, long jarg3, timeval jarg3_, long jarg4, long jarg5, char jarg6);
  public final static native int encodeTRAJMessageHeader(int jarg1, int jarg2, String jarg3, long jarg4, long jarg5, String jarg6, long jarg7, char jarg8);
  public final static native int encodeTRAJMessagePoint(long jarg1, timeval jarg1_, long jarg2, long jarg3, long jarg4, float jarg5, String jarg6, long jarg7, char jarg8);
  public final static native int decodeTRAJMessagePoint(long jarg1, TrajectoryWaypointType jarg1_, String jarg2, char jarg3);
  public final static native int encodeTRAJMessageFooter(String jarg1, long jarg2, char jarg3);
  public final static native int decodeTRAJMessageHeader(long jarg1, TrajectoryHeaderType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int encodeSTRTMessage(long jarg1, StartMessageType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int decodeSTRTMessage(String jarg1, long jarg2, long jarg3, timeval jarg3_, long jarg4, StartMessageType jarg4_, char jarg5);
  public final static native int encodeOSEMMessage(long jarg1, ObjectSettingsType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int decodeOSEMMessage(long jarg1, ObjectSettingsType jarg1_, String jarg2, long jarg3, long jarg4, char jarg5);
  public final static native int encodeOSTMMessage(int jarg1, String jarg2, long jarg3, char jarg4);
  public final static native int decodeOSTMMessage(String jarg1, long jarg2, long jarg3, char jarg4);
  public final static native int encodeHEABMessage(long jarg1, timeval jarg1_, int jarg2, String jarg3, long jarg4, char jarg5);
  public final static native int decodeHEABMessage(String jarg1, long jarg2, long jarg3, timeval jarg3_, long jarg4, HeabMessageDataType jarg4_, char jarg5);
  public final static native int encodeSYPMMessage(long jarg1, timeval jarg1_, long jarg2, timeval jarg2_, String jarg3, long jarg4, char jarg5);
  public final static native int encodeMTSPMessage(long jarg1, timeval jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int encodeTRCMMessage(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, String jarg6, long jarg7, char jarg8);
  public final static native int encodeACCMMessage(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, String jarg6, long jarg7, char jarg8);
  public final static native int encodeEXACMessage(long jarg1, long jarg2, timeval jarg2_, String jarg3, long jarg4, char jarg5);
  public final static native int encodeRCMMMessage(long jarg1, RemoteControlManoeuvreMessageType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int decodeRCMMMessage(String jarg1, long jarg2, long jarg3, RemoteControlManoeuvreMessageType jarg3_, char jarg4);
  public final static native int encodeINSUPMessage(int jarg1, String jarg2, long jarg3, char jarg4);
  public final static native int encodeDCTIMessage(long jarg1, DctiMessageDataType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int decodeDCTIMessage(String jarg1, long jarg2, long jarg3, DctiMessageDataType jarg3_, char jarg4);
  public final static native int getISOMessageType(String jarg1, long jarg2, char jarg3);
  public final static native void setISOCRCVerification(byte jarg1);
  public final static native void setTransmitterID(short jarg1);
  public final static native short getTransmitterID();
  public final static native int encodePODIMessage(long jarg1, PeerObjectInjectionType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int decodePODIMessage(String jarg1, long jarg2, long jarg3, timeval jarg3_, long jarg4, PeerObjectInjectionType jarg4_, char jarg5);
  public final static native int encodeOPROMessage(long jarg1, ObjectPropertiesType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int decodeOPROMessage(long jarg1, ObjectPropertiesType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int encodeFOPRMessage(long jarg1, ForeignObjectPropertiesType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int decodeFOPRMessage(long jarg1, ForeignObjectPropertiesType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int encodeRDCAMessage(long jarg1, RequestControlActionType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int decodeRDCAMessage(String jarg1, long jarg2, RequestControlActionType jarg2_, long jarg3, long jarg4, timeval jarg4_, char jarg5);
  public final static native int encodeGDRMMessage(long jarg1, GdrmMessageDataType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int decodeGDRMMessage(String jarg1, long jarg2, long jarg3, GdrmMessageDataType jarg3_, char jarg4);
  public final static native int decodeGREMMessage(String jarg1, long jarg2, long jarg3, GeneralResponseMessageType jarg3_, char jarg4);
  public final static native int encodeGREMMessage(long jarg1, GeneralResponseMessageType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int encodeDCMMMessage(long jarg1, RemoteControlManoeuvreMessageType jarg1_, String jarg2, long jarg3, char jarg4);
  public final static native int decodeDCMMMessage(String jarg1, long jarg2, long jarg3, RemoteControlManoeuvreMessageType jarg3_, char jarg4);
  public final static native void timeval_tv_sec_set(long jarg1, timeval jarg1_, int jarg2);
  public final static native int timeval_tv_sec_get(long jarg1, timeval jarg1_);
  public final static native void timeval_tv_usec_set(long jarg1, timeval jarg1_, int jarg2);
  public final static native int timeval_tv_usec_get(long jarg1, timeval jarg1_);
  public final static native long new_timeval();
  public final static native void delete_timeval(long jarg1);
  public final static native long Unknown_SWIGUpcast(long jarg1);
  public final static native long Off_SWIGUpcast(long jarg1);
  public final static native long Init_SWIGUpcast(long jarg1);
  public final static native long Armed_SWIGUpcast(long jarg1);
  public final static native long Disarmed_SWIGUpcast(long jarg1);
  public final static native long Running_SWIGUpcast(long jarg1);
  public final static native long PostRun_SWIGUpcast(long jarg1);
  public final static native long RemoteControlled_SWIGUpcast(long jarg1);
  public final static native long Aborting_SWIGUpcast(long jarg1);
  public final static native long PreArming_SWIGUpcast(long jarg1);
  public final static native long PreRunning_SWIGUpcast(long jarg1);
  public final static native long Socket_SWIGUpcast(long jarg1);
  public final static native long Server_SWIGUpcast(long jarg1);
  public final static native long TCPServer_SWIGUpcast(long jarg1);
  public final static native long UDPServer_SWIGUpcast(long jarg1);
}
