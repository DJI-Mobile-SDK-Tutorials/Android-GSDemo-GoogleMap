/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.isoObject;

public class PeerObjectInjectionType {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected PeerObjectInjectionType(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PeerObjectInjectionType obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        isoObjectJNI.delete_PeerObjectInjectionType(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setForeignTransmitterID(long value) {
    isoObjectJNI.PeerObjectInjectionType_foreignTransmitterID_set(swigCPtr, this, value);
  }

  public long getForeignTransmitterID() {
    return isoObjectJNI.PeerObjectInjectionType_foreignTransmitterID_get(swigCPtr, this);
  }

  public void setDataTimestamp(timeval value) {
    isoObjectJNI.PeerObjectInjectionType_dataTimestamp_set(swigCPtr, this, timeval.getCPtr(value), value);
  }

  public timeval getDataTimestamp() {
    long cPtr = isoObjectJNI.PeerObjectInjectionType_dataTimestamp_get(swigCPtr, this);
    return (cPtr == 0) ? null : new timeval(cPtr, false);
  }

  public void setState(ObjectStateType value) {
    isoObjectJNI.PeerObjectInjectionType_state_set(swigCPtr, this, value.swigValue());
  }

  public ObjectStateType getState() {
    return ObjectStateType.swigToEnum(isoObjectJNI.PeerObjectInjectionType_state_get(swigCPtr, this));
  }

  public void setPosition(CartesianPosition value) {
    isoObjectJNI.PeerObjectInjectionType_position_set(swigCPtr, this, CartesianPosition.getCPtr(value), value);
  }

  public CartesianPosition getPosition() {
    long cPtr = isoObjectJNI.PeerObjectInjectionType_position_get(swigCPtr, this);
    return (cPtr == 0) ? null : new CartesianPosition(cPtr, false);
  }

  public void setSpeed(SpeedType value) {
    isoObjectJNI.PeerObjectInjectionType_speed_set(swigCPtr, this, SpeedType.getCPtr(value), value);
  }

  public SpeedType getSpeed() {
    long cPtr = isoObjectJNI.PeerObjectInjectionType_speed_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SpeedType(cPtr, false);
  }

  public void setPitch_rad(double value) {
    isoObjectJNI.PeerObjectInjectionType_pitch_rad_set(swigCPtr, this, value);
  }

  public double getPitch_rad() {
    return isoObjectJNI.PeerObjectInjectionType_pitch_rad_get(swigCPtr, this);
  }

  public void setRoll_rad(double value) {
    isoObjectJNI.PeerObjectInjectionType_roll_rad_set(swigCPtr, this, value);
  }

  public double getRoll_rad() {
    return isoObjectJNI.PeerObjectInjectionType_roll_rad_get(swigCPtr, this);
  }

  public void setIsPitchValid(boolean value) {
    isoObjectJNI.PeerObjectInjectionType_isPitchValid_set(swigCPtr, this, value);
  }

  public boolean getIsPitchValid() {
    return isoObjectJNI.PeerObjectInjectionType_isPitchValid_get(swigCPtr, this);
  }

  public void setIsRollValid(boolean value) {
    isoObjectJNI.PeerObjectInjectionType_isRollValid_set(swigCPtr, this, value);
  }

  public boolean getIsRollValid() {
    return isoObjectJNI.PeerObjectInjectionType_isRollValid_get(swigCPtr, this);
  }

  public PeerObjectInjectionType() {
    this(isoObjectJNI.new_PeerObjectInjectionType(), true);
  }

}
