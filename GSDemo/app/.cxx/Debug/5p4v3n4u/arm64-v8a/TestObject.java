/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.asta.isoObject;

public class TestObject {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected TestObject(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TestObject obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        isoObject_wrapJNI.delete_TestObject(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public TestObject(int i) {
    this(isoObject_wrapJNI.new_TestObject__SWIG_0(i), true);
  }

  public TestObject(String listenIP) {
    this(isoObject_wrapJNI.new_TestObject__SWIG_1(listenIP), true);
  }

  public TestObject() {
    this(isoObject_wrapJNI.new_TestObject__SWIG_2(), true);
  }

  public void disconnect() {
    isoObject_wrapJNI.TestObject_disconnect(swigCPtr, this);
  }

  public String getCurrentStateName() {
    return isoObject_wrapJNI.TestObject_getCurrentStateName(swigCPtr, this);
  }

  public String getName() {
    return isoObject_wrapJNI.TestObject_getName(swigCPtr, this);
  }

  public CartesianPosition getPosition() {
    return new CartesianPosition(isoObject_wrapJNI.TestObject_getPosition(swigCPtr, this), true);
  }

  public SpeedType getSpeed() {
    return new SpeedType(isoObject_wrapJNI.TestObject_getSpeed(swigCPtr, this), true);
  }

  public SWIGTYPE_p_AccelerationType getAcceleration() {
    return new SWIGTYPE_p_AccelerationType(isoObject_wrapJNI.TestObject_getAcceleration(swigCPtr, this), true);
  }

  public SWIGTYPE_p_DriveDirectionType getDriveDirection() {
    return new SWIGTYPE_p_DriveDirectionType(isoObject_wrapJNI.TestObject_getDriveDirection(swigCPtr, this), true);
  }

  public TrajectoryHeaderType getTrajectoryHeader() {
    return new TrajectoryHeaderType(isoObject_wrapJNI.TestObject_getTrajectoryHeader(swigCPtr, this), true);
  }

  public TrajectoryWaypointVector getTrajectory() {
    return new TrajectoryWaypointVector(isoObject_wrapJNI.TestObject_getTrajectory(swigCPtr, this), true);
  }

  public GeographicPositionType getOrigin() {
    return new GeographicPositionType(isoObject_wrapJNI.TestObject_getOrigin(swigCPtr, this), true);
  }

  public String getLocalIP() {
    return isoObject_wrapJNI.TestObject_getLocalIP(swigCPtr, this);
  }

  public long getTransmitterID() {
    return isoObject_wrapJNI.TestObject_getTransmitterID(swigCPtr, this);
  }

  public TrajectoryWaypointType getTrajectoryWaypointAt(int index) {
    return new TrajectoryWaypointType(isoObject_wrapJNI.TestObject_getTrajectoryWaypointAt(swigCPtr, this, index), true);
  }

  public void handleAbort() {
    isoObject_wrapJNI.TestObject_handleAbort(swigCPtr, this);
  }

  public void setPosition(CartesianPosition pos) {
    isoObject_wrapJNI.TestObject_setPosition(swigCPtr, this, CartesianPosition.getCPtr(pos), pos);
  }

  public void setSpeed(SpeedType spd) {
    isoObject_wrapJNI.TestObject_setSpeed(swigCPtr, this, SpeedType.getCPtr(spd), spd);
  }

  public void setAcceleration(SWIGTYPE_p_AccelerationType acc) {
    isoObject_wrapJNI.TestObject_setAcceleration(swigCPtr, this, SWIGTYPE_p_AccelerationType.getCPtr(acc));
  }

  public void setDriveDirection(SWIGTYPE_p_DriveDirectionType drd) {
    isoObject_wrapJNI.TestObject_setDriveDirection(swigCPtr, this, SWIGTYPE_p_DriveDirectionType.getCPtr(drd));
  }

  public void setObjectState(ObjectStateID ost) {
    isoObject_wrapJNI.TestObject_setObjectState(swigCPtr, this, ost.swigValue());
  }

  public void setName(String nm) {
    isoObject_wrapJNI.TestObject_setName(swigCPtr, this, nm);
  }

  public void setReadyToArm(int rdy) {
    isoObject_wrapJNI.TestObject_setReadyToArm(swigCPtr, this, rdy);
  }

  public void setErrorState(char err) {
    isoObject_wrapJNI.TestObject_setErrorState(swigCPtr, this, err);
  }

}
