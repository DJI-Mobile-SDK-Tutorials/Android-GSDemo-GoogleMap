/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.asta.isoObject;

public final class ControlCenterStatusType {
  public final static ControlCenterStatusType CONTROL_CENTER_STATUS_INIT = new ControlCenterStatusType("CONTROL_CENTER_STATUS_INIT", isoObject_wrapJNI.CONTROL_CENTER_STATUS_INIT_get());
  public final static ControlCenterStatusType CONTROL_CENTER_STATUS_READY = new ControlCenterStatusType("CONTROL_CENTER_STATUS_READY", isoObject_wrapJNI.CONTROL_CENTER_STATUS_READY_get());
  public final static ControlCenterStatusType CONTROL_CENTER_STATUS_ABORT = new ControlCenterStatusType("CONTROL_CENTER_STATUS_ABORT", isoObject_wrapJNI.CONTROL_CENTER_STATUS_ABORT_get());
  public final static ControlCenterStatusType CONTROL_CENTER_STATUS_RUNNING = new ControlCenterStatusType("CONTROL_CENTER_STATUS_RUNNING", isoObject_wrapJNI.CONTROL_CENTER_STATUS_RUNNING_get());
  public final static ControlCenterStatusType CONTROL_CENTER_STATUS_TEST_DONE = new ControlCenterStatusType("CONTROL_CENTER_STATUS_TEST_DONE", isoObject_wrapJNI.CONTROL_CENTER_STATUS_TEST_DONE_get());
  public final static ControlCenterStatusType CONTROL_CENTER_STATUS_NORMAL_STOP = new ControlCenterStatusType("CONTROL_CENTER_STATUS_NORMAL_STOP", isoObject_wrapJNI.CONTROL_CENTER_STATUS_NORMAL_STOP_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static ControlCenterStatusType swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + ControlCenterStatusType.class + " with value " + swigValue);
  }

  private ControlCenterStatusType(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private ControlCenterStatusType(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private ControlCenterStatusType(String swigName, ControlCenterStatusType swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static ControlCenterStatusType[] swigValues = { CONTROL_CENTER_STATUS_INIT, CONTROL_CENTER_STATUS_READY, CONTROL_CENTER_STATUS_ABORT, CONTROL_CENTER_STATUS_RUNNING, CONTROL_CENTER_STATUS_TEST_DONE, CONTROL_CENTER_STATUS_NORMAL_STOP };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

